import pytest

from utils.replace_checkboxes import replace_numbered_checkboxes


@pytest.mark.parametrize(
    'message, message_replaced',
    (
        (None, ''),
        ('asdasd', 'asdasd'),

        ('''
Задачи на сегодня:
1. [x] В боковом меню убрать Отчет по разрешениям.
2. [ ] Добавить печатный бланк заявления.
999. [x] Добавить печатный бланк заявления.
''', '''
Задачи на сегодня:
- [x] 1. В боковом меню убрать Отчет по разрешениям.
- [ ] 2. Добавить печатный бланк заявления.
- [x] 999. Добавить печатный бланк заявления.
'''),

        ('''1. [x] В боковом меню убрать Отчет по разрешениям.
2. [x] Добавить печатный бланк заявления.
3. [x] В мастере поля ОПФ и все наименования сдвинуть вверх после даты заявления.
4. [x] Добавить прикрепление файлов на первом шаге. И кнопку пакетного скачивания.
5. [x] В физ. лицо добавить поле "Дата рождения"
6. [x] Добавить столбец "Источник"
7. [x] В табличные формы мастера (в работе/отработано) добавить столбец "Фактическая дата" (это дата последней смены статуса)
8. [x] В табличные формы мастера (в работе/отработано) добавить столбец "Регл. срок" (рассчитывается при создании заявления=дата подачи+N дней). Регламентные сроки по услугам нужно задавать в конфиге.
9. [ ] Вход по ЕСИА (пока заблокированная кнопка на форме авторизации)''',
         '''- [x] 1. В боковом меню убрать Отчет по разрешениям.
- [x] 2. Добавить печатный бланк заявления.
- [x] 3. В мастере поля ОПФ и все наименования сдвинуть вверх после даты заявления.
- [x] 4. Добавить прикрепление файлов на первом шаге. И кнопку пакетного скачивания.
- [x] 5. В физ. лицо добавить поле "Дата рождения"
- [x] 6. Добавить столбец "Источник"
- [x] 7. В табличные формы мастера (в работе/отработано) добавить столбец "Фактическая дата" (это дата последней смены статуса)
- [x] 8. В табличные формы мастера (в работе/отработано) добавить столбец "Регл. срок" (рассчитывается при создании заявления=дата подачи+N дней). Регламентные сроки по услугам нужно задавать в конфиге.
- [ ] 9. Вход по ЕСИА (пока заблокированная кнопка на форме авторизации)''')
    )
)
def test_replace_checkboxes(message, message_replaced):
    assert replace_numbered_checkboxes(message) == message_replaced
